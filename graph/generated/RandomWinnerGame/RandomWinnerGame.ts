// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestPaid extends ethereum.Event {
  get params(): RequestPaid__Params {
    return new RequestPaid__Params(this);
  }
}

export class RequestPaid__Params {
  _event: RequestPaid;

  constructor(event: RequestPaid) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get payer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RequestsCreated extends ethereum.Event {
  get params(): RequestsCreated__Params {
    return new RequestsCreated__Params(this);
  }
}

export class RequestsCreated__Params {
  _event: RequestsCreated;

  constructor(event: RequestsCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RandomWinnerGame__requestsResult {
  value0: Address;
  value1: BigInt;
  value2: string;
  value3: i32;

  constructor(value0: Address, value1: BigInt, value2: string, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getRequestCreator(): Address {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }

  getDetailsURI(): string {
    return this.value2;
  }

  get_state(): i32 {
    return this.value3;
  }
}

export class RandomWinnerGame extends ethereum.SmartContract {
  static bind(address: Address): RandomWinnerGame {
    return new RandomWinnerGame("RandomWinnerGame", address);
  }

  EPNS_COMM_ADDRESS(): Address {
    let result = super.call(
      "EPNS_COMM_ADDRESS",
      "EPNS_COMM_ADDRESS():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_EPNS_COMM_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "EPNS_COMM_ADDRESS",
      "EPNS_COMM_ADDRESS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  channelAddress(): Address {
    let result = super.call("channelAddress", "channelAddress():(address)", []);

    return result[0].toAddress();
  }

  try_channelAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "channelAddress",
      "channelAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createRequest(creator: Address, _amount: BigInt, detailsURI: string): BigInt {
    let result = super.call(
      "createRequest",
      "createRequest(address,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(detailsURI)
      ]
    );

    return result[0].toBigInt();
  }

  try_createRequest(
    creator: Address,
    _amount: BigInt,
    detailsURI: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createRequest",
      "createRequest(address,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(detailsURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createRequestDirect(
    _payer: Address,
    _amount: BigInt,
    detailsURI: string
  ): BigInt {
    let result = super.call(
      "createRequestDirect",
      "createRequestDirect(address,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(_payer),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(detailsURI)
      ]
    );

    return result[0].toBigInt();
  }

  try_createRequestDirect(
    _payer: Address,
    _amount: BigInt,
    detailsURI: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createRequestDirect",
      "createRequestDirect(address,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(_payer),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(detailsURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requests(param0: BigInt): RandomWinnerGame__requestsResult {
    let result = super.call(
      "requests",
      "requests(uint256):(address,uint256,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new RandomWinnerGame__requestsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toI32()
    );
  }

  try_requests(
    param0: BigInt
  ): ethereum.CallResult<RandomWinnerGame__requestsResult> {
    let result = super.tryCall(
      "requests",
      "requests(uint256):(address,uint256,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RandomWinnerGame__requestsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toI32()
      )
    );
  }

  requestsForUser(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "requestsForUser",
      "requestsForUser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_requestsForUser(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "requestsForUser",
      "requestsForUser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalRequests(): BigInt {
    let result = super.call("totalRequests", "totalRequests():(uint32)", []);

    return result[0].toBigInt();
  }

  try_totalRequests(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalRequests", "totalRequests():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateRequestCall extends ethereum.Call {
  get inputs(): CreateRequestCall__Inputs {
    return new CreateRequestCall__Inputs(this);
  }

  get outputs(): CreateRequestCall__Outputs {
    return new CreateRequestCall__Outputs(this);
  }
}

export class CreateRequestCall__Inputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }

  get creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get detailsURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateRequestCall__Outputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateRequestDirectCall extends ethereum.Call {
  get inputs(): CreateRequestDirectCall__Inputs {
    return new CreateRequestDirectCall__Inputs(this);
  }

  get outputs(): CreateRequestDirectCall__Outputs {
    return new CreateRequestDirectCall__Outputs(this);
  }
}

export class CreateRequestDirectCall__Inputs {
  _call: CreateRequestDirectCall;

  constructor(call: CreateRequestDirectCall) {
    this._call = call;
  }

  get _payer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get detailsURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateRequestDirectCall__Outputs {
  _call: CreateRequestDirectCall;

  constructor(call: CreateRequestDirectCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PayRequestCall extends ethereum.Call {
  get inputs(): PayRequestCall__Inputs {
    return new PayRequestCall__Inputs(this);
  }

  get outputs(): PayRequestCall__Outputs {
    return new PayRequestCall__Outputs(this);
  }
}

export class PayRequestCall__Inputs {
  _call: PayRequestCall;

  constructor(call: PayRequestCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayRequestCall__Outputs {
  _call: PayRequestCall;

  constructor(call: PayRequestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendNotViaPushCall extends ethereum.Call {
  get inputs(): SendNotViaPushCall__Inputs {
    return new SendNotViaPushCall__Inputs(this);
  }

  get outputs(): SendNotViaPushCall__Outputs {
    return new SendNotViaPushCall__Outputs(this);
  }
}

export class SendNotViaPushCall__Inputs {
  _call: SendNotViaPushCall;

  constructor(call: SendNotViaPushCall) {
    this._call = call;
  }

  get _reciever(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SendNotViaPushCall__Outputs {
  _call: SendNotViaPushCall;

  constructor(call: SendNotViaPushCall) {
    this._call = call;
  }
}

export class SendRequestCall extends ethereum.Call {
  get inputs(): SendRequestCall__Inputs {
    return new SendRequestCall__Inputs(this);
  }

  get outputs(): SendRequestCall__Outputs {
    return new SendRequestCall__Outputs(this);
  }
}

export class SendRequestCall__Inputs {
  _call: SendRequestCall;

  constructor(call: SendRequestCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reciever(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SendRequestCall__Outputs {
  _call: SendRequestCall;

  constructor(call: SendRequestCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
